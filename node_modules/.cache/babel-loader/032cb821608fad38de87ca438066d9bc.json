{"ast":null,"code":"import _defineProperty from\"/home/amitroy/Desktop/git/mf-landing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/amitroy/Desktop/git/mf-landing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/amitroy/Desktop/git/mf-landing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from\"react\";import{notification}from\"antd\";import axios from\"axios\";var useForm=function useForm(validate){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),errors=_useState4[0],setErrors=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),shouldSubmit=_useState6[0],setShouldSubmit=_useState6[1];var openNotificationWithIcon=function openNotificationWithIcon(type){notification[type]({message:\"Success\",description:\"Your message has been sent!\"});};var handleSubmit=function handleSubmit(event){event.preventDefault();setErrors(validate(values));// Your url for API\nvar url=\"\";if(Object.keys(values).length===3){axios.post(url,_objectSpread({},values)).then(function(){setShouldSubmit(true);});}};useEffect(function(){if(Object.keys(errors).length===0&&shouldSubmit){setValues(\"\");openNotificationWithIcon(\"success\");}},[errors,shouldSubmit]);var handleChange=function handleChange(event){event.persist();setValues(function(values){return _objectSpread(_objectSpread({},values),{},_defineProperty({},event.target.name,event.target.value));});setErrors(function(errors){return _objectSpread(_objectSpread({},errors),{},_defineProperty({},event.target.name,\"\"));});};return{handleChange:handleChange,handleSubmit:handleSubmit,values:values,errors:errors};};export default useForm;","map":{"version":3,"sources":["/home/amitroy/Desktop/git/mf-landing/src/components/ContactForm/useForm.js"],"names":["useState","useEffect","notification","axios","useForm","validate","values","setValues","errors","setErrors","shouldSubmit","setShouldSubmit","openNotificationWithIcon","type","message","description","handleSubmit","event","preventDefault","url","Object","keys","length","post","then","handleChange","persist","target","name","value"],"mappings":"kdAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,YAAT,KAA6B,MAA7B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,QAAD,CAAc,eACAL,QAAQ,CAAC,EAAD,CADR,wCACrBM,MADqB,eACbC,SADa,8BAEAP,QAAQ,CAAC,EAAD,CAFR,yCAErBQ,MAFqB,eAEbC,SAFa,8BAGYT,QAAQ,CAAC,KAAD,CAHpB,yCAGrBU,YAHqB,eAGPC,eAHO,eAK5B,GAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACC,IAAD,CAAU,CACzCX,YAAY,CAACW,IAAD,CAAZ,CAAmB,CACjBC,OAAO,CAAE,SADQ,CAEjBC,WAAW,CAAE,6BAFI,CAAnB,EAID,CALD,CAOA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9BA,KAAK,CAACC,cAAN,GACAT,SAAS,CAACJ,QAAQ,CAACC,MAAD,CAAT,CAAT,CACA;AACA,GAAMa,CAAAA,GAAG,CAAG,EAAZ,CACA,GAAIC,MAAM,CAACC,IAAP,CAAYf,MAAZ,EAAoBgB,MAApB,GAA+B,CAAnC,CAAsC,CACpCnB,KAAK,CACFoB,IADH,CACQJ,GADR,kBAEOb,MAFP,GAIGkB,IAJH,CAIQ,UAAM,CACVb,eAAe,CAAC,IAAD,CAAf,CACD,CANH,EAOD,CACF,CAdD,CAgBAV,SAAS,CAAC,UAAM,CACd,GAAImB,MAAM,CAACC,IAAP,CAAYb,MAAZ,EAAoBc,MAApB,GAA+B,CAA/B,EAAoCZ,YAAxC,CAAsD,CACpDH,SAAS,CAAC,EAAD,CAAT,CACAK,wBAAwB,CAAC,SAAD,CAAxB,CACD,CACF,CALQ,CAKN,CAACJ,MAAD,CAASE,YAAT,CALM,CAAT,CAOA,GAAMe,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACR,KAAD,CAAW,CAC9BA,KAAK,CAACS,OAAN,GACAnB,SAAS,CAAC,SAACD,MAAD,wCACLA,MADK,wBAEPW,KAAK,CAACU,MAAN,CAAaC,IAFN,CAEaX,KAAK,CAACU,MAAN,CAAaE,KAF1B,IAAD,CAAT,CAIApB,SAAS,CAAC,SAACD,MAAD,wCAAkBA,MAAlB,wBAA2BS,KAAK,CAACU,MAAN,CAAaC,IAAxC,CAA+C,EAA/C,IAAD,CAAT,CACD,CAPD,CASA,MAAO,CACLH,YAAY,CAAZA,YADK,CAELT,YAAY,CAAZA,YAFK,CAGLV,MAAM,CAANA,MAHK,CAILE,MAAM,CAANA,MAJK,CAAP,CAMD,CAlDD,CAoDA,cAAeJ,CAAAA,OAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { notification } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nconst useForm = (validate) => {\r\n  const [values, setValues] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [shouldSubmit, setShouldSubmit] = useState(false);\r\n\r\n  const openNotificationWithIcon = (type) => {\r\n    notification[type]({\r\n      message: \"Success\",\r\n      description: \"Your message has been sent!\",\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setErrors(validate(values));\r\n    // Your url for API\r\n    const url = \"\";\r\n    if (Object.keys(values).length === 3) {\r\n      axios\r\n        .post(url, {\r\n          ...values,\r\n        })\r\n        .then(() => {\r\n          setShouldSubmit(true);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && shouldSubmit) {\r\n      setValues(\"\");\r\n      openNotificationWithIcon(\"success\");\r\n    }\r\n  }, [errors, shouldSubmit]);\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n    setErrors((errors) => ({ ...errors, [event.target.name]: \"\" }));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    errors,\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n"]},"metadata":{},"sourceType":"module"}