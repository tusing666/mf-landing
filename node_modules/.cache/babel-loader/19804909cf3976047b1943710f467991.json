{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{lazy}from\"react\";import{Row,Col}from\"antd\";import Zoom from\"react-reveal/Zoom\";import{withTranslation}from\"react-i18next\";import useForm from\"./useForm\";import validate from\"./validationRules\";import*as S from\"./styles\";var Block=/*#__PURE__*/lazy(function(){return import(\"../Block\");});var Input=/*#__PURE__*/lazy(function(){return import(\"../../common/Input\");});var Button=/*#__PURE__*/lazy(function(){return import(\"../../common/Button\");});var TextArea=/*#__PURE__*/lazy(function(){return import(\"../../common/TextArea\");});var Contact=function Contact(_ref){var title=_ref.title,content=_ref.content,id=_ref.id,t=_ref.t;var _useForm=useForm(validate),values=_useForm.values,errors=_useForm.errors,handleChange=_useForm.handleChange,handleSubmit=_useForm.handleSubmit;var ValidationType=function ValidationType(_ref2){var type=_ref2.type;var ErrorMessage=errors[type];return errors[type]?/*#__PURE__*/_jsx(Zoom,{cascade:true,children:/*#__PURE__*/_jsx(S.Span,{children:ErrorMessage})}):/*#__PURE__*/_jsx(S.Span,{});};return/*#__PURE__*/_jsx(S.ContactContainer,{id:id,children:/*#__PURE__*/_jsx(S.Contact,{children:/*#__PURE__*/_jsxs(Row,{type:\"flex\",justify:\"space-between\",align:\"middle\",children:[/*#__PURE__*/_jsx(Col,{lg:12,md:11,sm:24,children:/*#__PURE__*/_jsx(Block,{padding:true,title:title,content:content})}),/*#__PURE__*/_jsx(Col,{lg:12,md:12,sm:24,children:/*#__PURE__*/_jsxs(S.FormGroup,{autoComplete:\"off\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Col,{span:24,children:[/*#__PURE__*/_jsx(Input,{type:\"text\",name:\"name\",id:\"Name\",placeholder:\"Your Name\",value:values.name||\"\",onChange:handleChange}),/*#__PURE__*/_jsx(ValidationType,{type:\"name\"})]}),/*#__PURE__*/_jsxs(Col,{span:24,children:[/*#__PURE__*/_jsx(Input,{type:\"text\",name:\"email\",id:\"Email\",placeholder:\"Your Email\",value:values.email||\"\",onChange:handleChange}),/*#__PURE__*/_jsx(ValidationType,{type:\"email\"})]}),/*#__PURE__*/_jsxs(Col,{span:24,children:[/*#__PURE__*/_jsx(TextArea,{placeholder:\"Your Message\",value:values.message||\"\",name:\"message\",id:\"Message\",onChange:handleChange}),/*#__PURE__*/_jsx(ValidationType,{type:\"message\"})]}),/*#__PURE__*/_jsx(S.ButtonContainer,{children:/*#__PURE__*/_jsx(Button,{name:\"submit\",type:\"submit\",children:t(\"Submit\")})})]})})]})})});};export default withTranslation()(Contact);","map":{"version":3,"sources":["/home/amitroy/Desktop/git/mf-landing/src/components/ContactForm/index.js"],"names":["lazy","Row","Col","Zoom","withTranslation","useForm","validate","S","Block","Input","Button","TextArea","Contact","title","content","id","t","values","errors","handleChange","handleSubmit","ValidationType","type","ErrorMessage","name","email","message"],"mappings":"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","sourcesContent":["import { lazy } from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport Zoom from \"react-reveal/Zoom\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nimport useForm from \"./useForm\";\r\nimport validate from \"./validationRules\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst Block = lazy(() => import(\"../Block\"));\r\nconst Input = lazy(() => import(\"../../common/Input\"));\r\nconst Button = lazy(() => import(\"../../common/Button\"));\r\nconst TextArea = lazy(() => import(\"../../common/TextArea\"));\r\n\r\nconst Contact = ({ title, content, id, t }) => {\r\n  const { values, errors, handleChange, handleSubmit } = useForm(validate);\r\n\r\n  const ValidationType = ({ type }) => {\r\n    const ErrorMessage = errors[type];\r\n    return errors[type] ? (\r\n      <Zoom cascade>\r\n        <S.Span>{ErrorMessage}</S.Span>\r\n      </Zoom>\r\n    ) : (\r\n      <S.Span />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <S.ContactContainer id={id}>\r\n      <S.Contact>\r\n        <Row type=\"flex\" justify=\"space-between\" align=\"middle\">\r\n          <Col lg={12} md={11} sm={24}>\r\n            <Block padding={true} title={title} content={content} />\r\n          </Col>\r\n          <Col lg={12} md={12} sm={24}>\r\n            <S.FormGroup autoComplete=\"off\" onSubmit={handleSubmit}>\r\n              <Col span={24}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"Name\"\r\n                  placeholder=\"Your Name\"\r\n                  value={values.name || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"name\" />\r\n              </Col>\r\n              <Col span={24}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  id=\"Email\"\r\n                  placeholder=\"Your Email\"\r\n                  value={values.email || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"email\" />\r\n              </Col>\r\n              <Col span={24}>\r\n                <TextArea\r\n                  placeholder=\"Your Message\"\r\n                  value={values.message || \"\"}\r\n                  name=\"message\"\r\n                  id=\"Message\"\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"message\" />\r\n              </Col>\r\n              <S.ButtonContainer>\r\n                <Button name=\"submit\" type=\"submit\">\r\n                  {t(\"Submit\")}\r\n                </Button>\r\n              </S.ButtonContainer>\r\n            </S.FormGroup>\r\n          </Col>\r\n        </Row>\r\n      </S.Contact>\r\n    </S.ContactContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(Contact);\r\n"]},"metadata":{},"sourceType":"module"}